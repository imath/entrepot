window.wp=window.wp||{},window.entrepot=_.extend(window.entrepot||{},_.pick(window.wp,"Backbone","ajax","template")),function(n,o){"undefined"!=typeof entrepotUpgraderl10n&&(n.Models=n.Models||{},n.Collections=n.Collections||{},n.Views=n.Views||{},n.Collections.Tasks=Backbone.Collection.extend({proceed:function(e){return(e=e||{}).context=this,e.data=e.data||{},e.url="",e.beforeSend=function(e){e.setRequestHeader("X-Entrepot-Nonce",entrepotUpgraderl10n.entrepot_nonce),e.setRequestHeader("Accept","application/json")},n.ajax.send(e)}}),n.View=n.Backbone.View.extend({prepare:function(){return!_.isUndefined(this.model)&&_.isFunction(this.model.toJSON)?this.model.toJSON():{}}}),n.Views.Card=n.View.extend({className:"repository-card",template:n.template("repository-card"),initialize:function(){this.model.get("did_upgrade")||(this.listenToOnce(this.model,"change:do_upgrade",this.displayTasks),this.listenToOnce(this.model,"change:did_upgrade",this.emptyTasks))},setUpTasks:function(){var s=this;_.isUndefined(entrepotUpgraderl10n.tasks[this.model.get("slug")])||_.each(entrepotUpgraderl10n.tasks[this.model.get("slug")],function(e,t){_.isObject(e)&&s.tasks.add({id:e.callback,order:t,message:e.message,count:e.count,number:e.number,done:0,active:!1})})},displayTasks:function(){this.tasks=new n.Collections.Tasks,this.views.add(".repository-tasks",new n.Views.Upgrader({collection:this.tasks,repository:this.model})),this.setUpTasks()},emptyTasks:function(e){var t=this;!1!==e.get("did_upgrade")&&window.setTimeout(function(){_.first(t.views._views[".repository-tasks"]).remove()},1e3)}}),n.Views.Cards=n.View.extend({events:{"click .repository-do-upgrade":"initUpgrade"},initialize:function(){_.each(this.collection.models,function(e){this.displayRepository(e)},this),this.listenTo(this.collection,"change:did_upgrade",this.resetButtons)},displayRepository:function(e){this.views.add(new n.Views.Card({model:e}))},initUpgrade:function(e){if(e.preventDefault(),!n.Upgrader.isWarned){var t=window.confirm(entrepotUpgraderl10n.confirm);if(n.Upgrader.isWarned=!0,!t)return}var s=o(e.currentTarget),i=s.data("slug");s.hasClass("disabled")||!i||_.isUndefined(this.views._views[""])||_.each(this.views._views[""],function(e){e.$el.find("button.repository-do-upgrade").addClass("disabled"),i===e.model.get("slug")&&e.model.set("do_upgrade",!0)})},resetButtons:function(i){_.each(this.views._views[""],function(e){var t=e.$el.find("button.repository-do-upgrade"),s=e.model.get("did_upgrade");!1!==s&&t.removeClass("disabled"),i.get("slug")===e.model.get("slug")&&s&&(e.$el.find(".description").remove(),t.remove(),e.$el.find(".repository-info").append(o("<div></div>").addClass("repository-upgraded").html('<span class="dashicons dashicons-yes"></span>'+entrepotUpgraderl10n.upgraded)))})}}),n.Views.Upgrader=n.View.extend({tagName:"div",initialize:function(){this.containerId=this.options.repository.get("slug")+"-upgrader-tasks",this.views.add(new n.View({tagName:"ul",id:this.containerId})),this.collection.on("add",this.injectTask,this),this.collection.on("change:active",this.manageQueue,this),this.collection.on("change:done",this.manageQueue,this)},taskSuccess:function(e){var t,s,i;e.done&&e.callback&&((t=this.tasks.get(e.callback)).set("done",Number(e.done)+Number(t.get("done"))),Number(t.get("count"))===Number(t.get("done"))&&(t.set("active",!1),s=Number(t.get("order"))+1,i=this.tasks.findWhere({order:s}),_.isObject(i)?i.set("active",!0):this.repository.set("did_upgrade",!0)))},taskError:function(e){var t;e.message&&(t=e.callback?"#"+e.callback+" .upgrade-progress":o("#"+this.repository.get("slug")+"-upgrader-tasks").prepend(o("<li></li>").addClass("entrepot-upgrader-task").html(o("<div></div>").addClass("upgrade-progress"))).children().first().find(".upgrade-progress"),o(t).html(e.message).addClass(e.type)),this.repository.set("did_upgrade",!1)},injectTask:function(e){this.views.add("#"+this.containerId,new n.Views.Task({model:e}))},manageQueue:function(e){var t={tasks:this.collection,repository:this.options.repository};!0===e.get("active")&&this.collection.proceed({data:_.pick(e.attributes,["id","count","number","done"]),success:_.bind(this.taskSuccess,t),error:_.bind(this.taskError,t)})}}),n.Views.Task=n.View.extend({tagName:"li",template:n.template("progress-window"),className:"entrepot-upgrader-task",initialize:function(){this.model.on("change:done",this.taskProgress,this),this.model.on("change:active",this.addClass,this),0===this.model.get("order")&&this.model.set("active",!0)},addClass:function(e){!0===e.get("active")&&o(this.$el).addClass("active")},taskProgress:function(e){var t;_.isUndefined(e.get("done"))||_.isUndefined(e.get("count"))||(t=Number(e.get("done"))/Number(e.get("count"))*100,o("#"+e.get("id")+" .upgrade-progress .upgrade-bar").css("width",t+"%"))}}),n.Upgrader={start:function(){this.repositories=new Backbone.Collection(entrepotUpgraderl10n.repositories),this.isWarned=!1,this.cards=new n.Views.Cards({el:o("#entrepot-cards"),collection:this.repositories}).render()}},n.Upgrader.start())}(window.entrepot,jQuery);