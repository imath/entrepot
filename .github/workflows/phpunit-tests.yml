# PHP Unit workflow
name: PHP Unit Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  unit-php:
    name: ${{ matrix.php }} on ${{ matrix.os }} against WordPress Trunk
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4', '8.0' ]
        os: [ ubuntu-latest ]

    env:
      WP_ENV_PHP_VERSION: ${{ matrix.php }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log information
        run: |
          echo "$GITHUB_REF"
          echo "$GITHUB_EVENT_NAME"
          npm --version
          node --version
          git --version
          php --version
          composer --version

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v1
        with:
          composer-options: "--ignore-platform-reqs"
          dependency-versions: "lowest"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install node modules and prepare Unit tests
        run: |
          npm ci
          npm run prep-unit-tests

      - name: Install WordPress
        run: |
          chmod -R 767 ./
          npm run wp-env start

      - name: Running single site unit tests
        run: npm run test-php
        if: ${{ success() || failure() }}

      - name: Running multisite unit tests
        run: npm run test-php-multisite
        if: ${{ success() || failure() }}
